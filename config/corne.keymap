/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NUM 1
#define NAV 2
#define SYM 3
#define CODE 4
#define WINDOW 5
#define ADJUST 6


/ {
        // homerow mod behavior
        behaviors {
                hm: homerow_mods {
                 compatible = "zmk,behavior-hold-tap";
                 label = "HOMEROW_MODS";
                  #binding-cells = <2>;
                  tapping-term-ms = <150>;
                 quick_tap_ms = <0>;
                  flavor = "tap-preferred";
                  bindings = <&kp>, <&kp>;
                 };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
        &kp TAB   &kp Q        &lt WINDOW W &kp E      &kp R      &kp T    &kp Y &kp U      &kp I      &kp O       &kp P           &kp BSPC
        &kp ESC   &hm LSHIFT A &hm LCTRL S  &hm LALT D &hm LGUI F &kp G    &kp H &hm RGUI J &hm RALT K &hm RCTRL L &hm RSHIFT SEMI &kp SQT
        &kp LSHFT &kp Z        &kp X        &kp C      &kp V      &kp B    &kp N &kp M      &kp COMMA  &kp DOT     &kp FSLH        &kp RSHFT
                           &mo ADJUST &lt NUM COMMA &lt CODE SPACE    &lt SYM RET &lt NAV MINUS &trans
                        >;
                };
                num_layer {
                        bindings = <
        &kp GRAVE &kp EXCL &kp AT &kp HASH  &kp DOLLAR  &kp PERCENT      &kp DOT   &kp N7   &kp N8 &kp N9    &kp ASTRK &kp BSPC
        &trans &kp CARET &kp AMPS &kp ASTRK &kp RPAR &trans              &kp EQUAL &kp N4 &kp N5 &kp N6 &kp PLUS &kp MINUS
        &kp LSHFT  &trans   &trans &trans  &trans &trans                 &kp DOT   &kp N1  &kp N2 &kp N3  &kp FSLH  &kp RSHFT 
                                &trans     &trans    &trans         &trans &kp N0 &trans
                        >;
                };

                nav_layer {
                        bindings = <
        &kp TAB  &trans  &trans  &trans  &trans  &trans            &trans &trans  &kp UP &trans &trans &trans
        &kp ESC &kp LSHFT  &kp LCTRL  &kp LALT &kp LGUI  &trans     &kp LA(LEFT) &kp LEFT &kp DOWN  &kp RIGHT &kp RA(RIGHT) &trans
        &kp LSHFT &trans &trans  &trans    &trans    &trans         &trans    &trans    &trans   &trans   &trans &trans
                                   &trans &trans &trans        &trans &trans &trans
                        >;
                };

                sym_layer {
                        bindings = <
        &kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT        &kp CARET  &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
        &trans &kp PERCENT  &kp CARET  &kp AMPS &kp ASTRK  &kp BSLH             &kp EQUAL &kp RS(COMMA)  &kp RS(DOT)  &kp FSLH &kp PLUS &kp MINUS
        &trans &trans &trans  &kp LS(LA(MINUS))  &kp MINUS  &kp UNDER          &trans    &trans    &trans   &trans   &trans &trans
                                   &trans &trans &trans        &trans &mo ADJUST &trans
                        >;
                };

                code_layer {
                        bindings = <
        &kp GRAVE  &kp EXCL  &kp AT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp N5    &kp CARET  &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
        &trans &kp PERCENT  &kp CARET  &kp LPAR &kp RPAR  &trans                     &kp EQUAL &kp LS(COMMA)  &kp RS(DOT)  &kp FSLH &kp PLUS &kp MINUS
        &trans &trans &trans  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp UNDER             &trans    &trans    &trans   &trans   &trans &trans
                                   &trans &trans &trans        &trans &mo ADJUST &trans
                        >;
                };

                window_layer {
                        bindings = <
        &trans &trans &trans  &trans  &trans  &trans        &trans  &trans &kp LC(LA(LG(UP))) &trans &trans &trans
        &trans &trans &trans  &trans  &trans  &trans        &kp LS(LC(LA(LG(LEFT)))) &kp LC(LA(LG(LEFT)))  &kp LC(LA(LG(DOWN)))  &kp LC(LA(LG(RIGHT))) &trans &trans
        &trans &trans &trans  &trans  &trans  &trans        &trans    &trans    &trans   &trans   &trans &trans
                       &trans &trans &kp LG(TAB)       &kp LG(GRAVE) &trans &trans
                        >;
                };

                adjust_layer {
                        bindings = <
        &out OUT_TOG &trans &trans  &trans  &trans  &bt BT_CLR        &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans &kp LG(BSLH)
        &trans &trans &trans  &trans  &trans  &trans        &trans &trans  &trans  &trans &trans &reset
        &trans &trans &trans  &trans  &trans  &trans        &trans    &trans    &trans   &trans   &trans &bootloader
                       &trans &trans &trans       &trans &trans &trans
                        >;
                };
        };
};
